//	private String getOutput() {
//        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
//        fileChooser.setDialogTitle("Select path");
//        fileChooser.setCurrentDirectory(new File("."));
//        fileChooser.setSelectedFile(new File(".\\tmp.classifier"));
//
//        int result = fileChooser.showDialog(null, "OK");
//    	if (result == JFileChooser.APPROVE_OPTION) {
//        	String path=fileChooser.getSelectedFile().getPath();
//        	File f = new File(path);
//        	if(f.isDirectory()){
//        		isFile = false;
//        		txtrLala.append("Output Dir:\n"+path);
////        		ImportDir.getInstance().setImportPath(path);
//        	}
//        		
//        	else{
//        		isFile = true;
//        		txtrLala.append("Output File:\n"+path);
////        		ImportFile.getInstance().setImportPath(path);
//        	}
//        	trainerClassifier.getInstance().setImportFile("tmp.mallet");
//        	trainerClassifier.getInstance().setOuputFile(path);
//        	return path;
//        		
//        }
//        return System.getProperty("user.dir");
//    }










	//将程序执行信息打印
	private void print2text(String[][] result, String action){
		if (result[2][1].equals("0")){
			outputArea.append(result[2][0]+"\n");
			outputArea.setSelectionStart(outputArea.getText().length());
			for (String lines:result[0] ) {  //input
				System.out.println(lines); 
				outputArea.append(lines+"\n");
	            //自动滚屏
				outputArea.setSelectionStart(outputArea.getText().length());
	        }  
			for (String lines:result[1] ) {  //error
				System.out.println(lines); 
				outputArea.append(lines+"\n");
				outputArea.setSelectionStart(outputArea.getText().length());
	        }
			outputArea.append(action + " succeed.\n\n\n");
			outputArea.setSelectionStart(txtrLala.getText().length());
		}
		else{
			outputArea.append(action + " Failed.\n\n\n");
			outputArea.setSelectionStart(outputArea.getText().length());
			return;
		}
	}
	
	
	
		//拼接命令并执行
	public String[][] run(){
		this.optionMap.putAll(advOptionMap);
		HashMap<String,String> optionMap=this.optionMap;
		String importType = this.action;
		String cmd=null;

		cmd="mallet "+importType+" --input";
		cmd+=" "+this.inputPath;
		if(importType.equals("import-dir"))
			cmd+="\\*";
		cmd+=" ";
		
		//遍历options
		Iterator iter = optionMap.entrySet().iterator();
		while (iter.hasNext()) {		
			Map.Entry entry = (Map.Entry) iter.next();
			String key = (String) entry.getKey();
			String val = (String) entry.getValue();
			cmd+="--"+key+" ";
			cmd+=val+" ";
		}
		
		cmd+="--output "+this.outputPath;
//		String[] helpcmd = new String[] { "cmd.exe", "/C", "mallet import-file --help" }; //for debug
		
		String[] exec_cmd=new String[] { "cmd.exe", "/C", cmd };
		System.out.println(cmd);
		String[][] result=ExecKit.exec(exec_cmd);
		return result;
	}