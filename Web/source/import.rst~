.. malletGUI documentation master file, created by
   sphinx-quickstart on Fri Apr 22 10:25:51 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.
##########################
Importing Data
##########################

Contents:


.. toctree::
   :maxdepth: 10
   
   import.rst
   index.rst
   GM.rst
   classify.rst
   OP.rst
   SQ.rst
   TM.rst


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

Importing Data
==============

MALLET represents data as lists of "instances". All MALLET instances include a data object. An instance can also include a name and (in classification contexts) a label. For example, if the application is guessing the language of web pages, an instance might consist of a vector of word counts (data), the URL of the page (name) and the language of the page (label).

For information about the MALLET data import API, see the `data import developer's guide <http://mallet.cs.umass.edu/import-devel.php>`_.

There are two primary methods for importing data into MALLET format, first when the source data consists of many separate files, and second when the data is contained in a single file, with one instance per line.

**One instance per file:** After downloading and building MALLET, change to the MALLET directory. Assume that text-only (.txt) versions of English web pages are in files in a directory called sample-data/web/en and text-only versions of German pages are in sample-data/web/de `(download sample data) <http://mallet.cs.umass.edu/dist/sample-data.tar.gz>`_. Now run this command:

bin/mallet import-dir --input sample-data/web/* --output web.mallet

MALLET will use the directory names as labels and the filenames as instance names. Note: make sure you are in the mallet directory, not the mallet/bin directory; otherwise you will get a ClassNotFoundException exception.

**One file, one instance per line:** Assume the data is in the following format:

[URL]  [language]  [text of the page...]

After `downloading <http://mallet.cs.umass.edu/download.php>`_ and building MALLET, change to the MALLET directory and run the following command:

bin/mallet import-file --input /data/web/data.txt --output web.mallet

In this case, the first token of each line (whitespace delimited, with optional comma) becomes the instance name, the second token becomes the label, and all additional text on the line is interpreted as a sequence of word tokens. Note that the data in this case will be a vector of feature/value pairs, such that a feature consists of a distinct word type and the value is the number of times that word occurs in the text.

There are many additional options to the import-dir and import-file commands. **Add the --help option to either of these commands to get a full list.** Some commonly used options to either command are:
`--keep-sequence.` This option preserves the document as a sequence of word features, rather than a vector of word feature counts. Use this option for sequence labeling tasks. The MALLET topic modeling toolkit also requires feature sequences rather than feature vectors.

`--preserve-case.` MALLET by default converts all word features to lowercase.

`--remove-stopwords.` This option tells MALLET to ignore a standard list of very common English adverbs, conjunctions, pronouns and prepositions. There are `several other options <http://mallet.cs.umass.edu/import-stoplist.php>`_ related to stopword specification.

`--token-regex.` MALLET divides documents into tokens using a regular expression. By default, a token is one or more characters in [A-Za-z]. Better options include:
* For non-English text, a good choice is --token-regex '[\p{L}\p{M}]+', which means Unicode letters and marks (required for Indic scripts). MALLET currently does not support Chinese or Japanese word segmentation.

* If you would like to include punctuation inside tokens (for example contractions like "don't" and internet addresses), you might use --token-regex `'[\p{L}\p{P}]*\p{L}'`, which means any sequence of letters or punctuation marks that ends in a letter. Note that this will include quotation marks at the beginning of words.

**SVMLight format:** SVMLight-style data in the format

`target feature:value feature:value ...`

can be imported with

`bin/mallet import-svmlight --input train test --output train.mallet test.mallet`

Note that the input and output arguments can take multiple files that are processed together using the same Pipe. Note that the target and feature fields can be either indices or strings. If they are indices, note that the indices in the Mallet alphabets and indices in the file may be different, though the data is equivalent. Real valued targets are not supported.
